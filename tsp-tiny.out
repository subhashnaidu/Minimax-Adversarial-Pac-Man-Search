
TSP using Repetitive Nearest Neighbor Algorithm by Dr. Demetrios Glinos:

Maze : tsp-tiny


Cost table:

   0   5   4   5   4   3   1   4   5   4   5
   5   0   9  10   1   8   4   5   6   9  10
   4   9   0   1   8   7   5   8   9   8   9
   5  10   1   0   9   8   6   9  10   9  10
   4   1   8   9   0   7   3   4   5   8   9
   3   8   7   8   7   0   4   7   8   5   4
   1   4   5   6   3   4   0   3   4   5   6
   4   5   8   9   4   7   3   0   1   4   5
   5   6   9  10   5   8   4   1   0   3   4
   4   9   8   9   8   5   5   4   3   0   1
   5  10   9  10   9   4   6   5   4   1   0


Food Array:

0 : (1,1)
1 : (1,4)
2 : (1,5)
3 : (2,1)
4 : (3,5)
5 : (4,2)
6 : (6,1)
7 : (7,1)
8 : (7,4)
9 : (7,5)


Population at step 1 :
   0 : cost=1 : [(4,2),1]
   1 : cost=3 : [(3,5),3]
   2 : cost=4 : [(1,4),4]
   3 : cost=4 : [(2,1),4]
   4 : cost=4 : [(6,1),4]
   5 : cost=4 : [(7,4),4]
   6 : cost=5 : [(1,1),5]
   7 : cost=5 : [(1,5),5]
   8 : cost=5 : [(7,1),5]
   9 : cost=5 : [(7,5),5]

Population at step 2 :
   0 : cost=4 : [(4,2),1][(2,1),3]
   1 : cost=4 : [(4,2),1][(6,1),3]
   2 : cost=5 : [(1,4),4][(1,5),1]
   3 : cost=5 : [(2,1),4][(1,1),1]
   4 : cost=5 : [(6,1),4][(7,1),1]
   5 : cost=5 : [(7,4),4][(7,5),1]
   6 : cost=6 : [(1,1),5][(2,1),1]
   7 : cost=6 : [(1,5),5][(1,4),1]
   8 : cost=6 : [(7,1),5][(6,1),1]
   9 : cost=6 : [(7,5),5][(7,4),1]
   10 : cost=7 : [(3,5),3][(4,2),4]
   11 : cost=7 : [(3,5),3][(7,5),4]

Population at step 3 :
   0 : cost=5 : [(4,2),1][(2,1),3][(1,1),1]
   1 : cost=5 : [(4,2),1][(6,1),3][(7,1),1]
   2 : cost=8 : [(6,1),4][(7,1),1][(7,4),3]
   3 : cost=8 : [(3,5),3][(7,5),4][(7,4),1]
   4 : cost=9 : [(2,1),4][(1,1),1][(4,2),4]
   5 : cost=9 : [(7,4),4][(7,5),1][(3,5),4]
   6 : cost=9 : [(7,4),4][(7,5),1][(7,1),4]
   7 : cost=9 : [(1,1),5][(2,1),1][(4,2),3]
   8 : cost=9 : [(7,1),5][(6,1),1][(4,2),3]
   9 : cost=9 : [(7,5),5][(7,4),1][(7,1),3]
   10 : cost=10 : [(3,5),3][(4,2),4][(2,1),3]
   11 : cost=10 : [(3,5),3][(4,2),4][(6,1),3]
   12 : cost=11 : [(1,4),4][(1,5),1][(4,2),6]
   13 : cost=11 : [(1,5),5][(1,4),1][(4,2),5]

Population at step 4 :
   0 : cost=8 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3]
   1 : cost=9 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1]
   2 : cost=10 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5]
   3 : cost=10 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1]
   4 : cost=10 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1]
   5 : cost=11 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3]
   6 : cost=11 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1]
   7 : cost=11 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1]
   8 : cost=12 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3]
   9 : cost=12 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3]
   10 : cost=12 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3]
   11 : cost=13 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4]
   12 : cost=14 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3]
   13 : cost=14 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3]
   14 : cost=14 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3]
   15 : cost=14 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3]

Population at step 5 :
   0 : cost=9 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   1 : cost=11 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1]
   2 : cost=12 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1]
   3 : cost=13 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   4 : cost=13 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3]
   5 : cost=13 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3]
   6 : cost=13 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1]
   7 : cost=13 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1]
   8 : cost=13 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1]
   9 : cost=14 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3]
   10 : cost=15 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1]
   11 : cost=15 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1]
   12 : cost=15 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1]
   13 : cost=15 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1]
   14 : cost=16 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5]
   15 : cost=16 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3]
   16 : cost=16 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3]

Population at step 6 :
   0 : cost=13 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   1 : cost=14 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3]
   2 : cost=15 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1][(4,2),3]
   3 : cost=15 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   4 : cost=16 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3][(2,1),3]
   5 : cost=16 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3]
   6 : cost=16 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1][(7,4),3]
   7 : cost=16 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1][(7,4),3]
   8 : cost=17 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(4,2),4]
   9 : cost=17 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1]
   10 : cost=17 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1]
   11 : cost=17 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3][(7,1),1]
   12 : cost=18 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1][(7,4),3]
   13 : cost=18 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1][(7,4),3]
   14 : cost=20 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1][(6,1),5]
   15 : cost=20 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1][(6,1),5]
   16 : cost=21 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8]

Population at step 7 :
   0 : cost=15 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1]
   1 : cost=17 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3][(2,1),3][(1,1),1]
   2 : cost=17 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1]
   3 : cost=17 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   4 : cost=17 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   5 : cost=18 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3]
   6 : cost=19 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   7 : cost=19 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1][(7,4),3][(7,5),1]
   8 : cost=20 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7]
   9 : cost=20 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7]
   10 : cost=20 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(4,2),4][(2,1),3]
   11 : cost=20 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3]
   12 : cost=21 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1][(6,1),5][(7,1),1]
   13 : cost=21 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1][(6,1),5][(7,1),1]
   14 : cost=22 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(6,1),5]
   15 : cost=22 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3][(7,1),1][(2,1),5]
   16 : cost=24 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(1,4),9]
   17 : cost=24 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(2,1),9]
   18 : cost=25 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(7,5),4]

Population at step 8 :
   0 : cost=19 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   1 : cost=19 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1]
   2 : cost=21 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   3 : cost=21 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   4 : cost=21 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1]
   5 : cost=21 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7][(1,1),1]
   6 : cost=21 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1]
   7 : cost=21 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1]
   8 : cost=23 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   9 : cost=23 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   10 : cost=23 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1]
   11 : cost=23 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3][(7,1),1][(2,1),5][(1,1),1]
   12 : cost=24 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3]
   13 : cost=24 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3]
   14 : cost=25 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8]
   15 : cost=25 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8]
   16 : cost=25 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(1,4),9][(1,5),1]
   17 : cost=25 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(2,1),9][(1,1),1]
   18 : cost=26 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(7,5),4][(7,4),1]

Population at step 9 :
   0 : cost=25 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1]
   1 : cost=25 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1]
   2 : cost=26 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7]
   3 : cost=28 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(1,4),9]
   4 : cost=28 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7]
   5 : cost=28 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7]
   6 : cost=30 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1][(2,1),9]
   7 : cost=30 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7][(1,1),1][(1,4),9]
   8 : cost=30 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(1,4),9]
   9 : cost=30 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(1,4),9]
   10 : cost=30 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7]
   11 : cost=30 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7]
   12 : cost=32 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(1,4),9]
   13 : cost=32 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3][(7,1),1][(2,1),5][(1,1),1][(1,4),9]
   14 : cost=32 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(1,4),7]
   15 : cost=32 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(1,4),7]
   16 : cost=34 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(1,4),9][(1,5),1][(2,1),9]
   17 : cost=34 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(2,1),9][(1,1),1][(1,4),9]
   18 : cost=34 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(7,5),4][(7,4),1][(1,4),8]

Population at step 10 :
   0 : cost=27 : [(4,2),1][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1]
   1 : cost=29 : [(1,4),4][(1,5),1][(4,2),6][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   2 : cost=29 : [(1,5),5][(1,4),1][(4,2),5][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(3,5),4]
   3 : cost=29 : [(3,5),3][(7,5),4][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(1,4),9][(1,5),1]
   4 : cost=29 : [(2,1),4][(1,1),1][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1]
   5 : cost=29 : [(1,1),5][(2,1),1][(4,2),3][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1]
   6 : cost=31 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(1,4),7][(1,5),1][(2,1),9][(1,1),1]
   7 : cost=31 : [(4,2),1][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7][(1,1),1][(1,4),9][(1,5),1]
   8 : cost=31 : [(6,1),4][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(1,4),9][(1,5),1]
   9 : cost=31 : [(3,5),3][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(7,4),3][(7,5),1][(1,4),9][(1,5),1]
   10 : cost=31 : [(1,4),4][(1,5),1][(4,2),6][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7][(1,1),1]
   11 : cost=31 : [(1,5),5][(1,4),1][(4,2),5][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(3,5),4][(2,1),7][(1,1),1]
   12 : cost=33 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(2,1),3][(1,1),1][(6,1),5][(7,1),1][(1,4),9][(1,5),1]
   13 : cost=33 : [(7,4),4][(7,5),1][(3,5),4][(4,2),4][(6,1),3][(7,1),1][(2,1),5][(1,1),1][(1,4),9][(1,5),1]
   14 : cost=33 : [(7,4),4][(7,5),1][(7,1),4][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(1,4),7][(1,5),1]
   15 : cost=33 : [(7,5),5][(7,4),1][(7,1),3][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(1,4),7][(1,5),1]
   16 : cost=35 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(1,4),9][(1,5),1][(2,1),9][(1,1),1]
   17 : cost=35 : [(3,5),3][(4,2),4][(6,1),3][(7,1),1][(7,4),3][(7,5),1][(2,1),9][(1,1),1][(1,4),9][(1,5),1]
   18 : cost=35 : [(7,1),5][(6,1),1][(4,2),3][(2,1),3][(1,1),1][(3,5),8][(7,5),4][(7,4),1][(1,4),8][(1,5),1]

Time to generate plan: 27 msec

Solution moves:

    1 : From [  4,  3 ] go N
    2 : From [  4,  2 ] go N
    3 : From [  4,  1 ] go W
    4 : From [  3,  1 ] go W
    5 : From [  2,  1 ] go W
    6 : From [  1,  1 ] go E
    7 : From [  2,  1 ] go E
    8 : From [  3,  1 ] go E
    9 : From [  4,  1 ] go E
   10 : From [  5,  1 ] go E
   11 : From [  6,  1 ] go E
   12 : From [  7,  1 ] go S
   13 : From [  7,  2 ] go S
   14 : From [  7,  3 ] go S
   15 : From [  7,  4 ] go S
   16 : From [  7,  5 ] go W
   17 : From [  6,  5 ] go W
   18 : From [  5,  5 ] go W
   19 : From [  4,  5 ] go W
   20 : From [  3,  5 ] go E
   21 : From [  4,  5 ] go N
   22 : From [  4,  4 ] go N
   23 : From [  4,  3 ] go W
   24 : From [  3,  3 ] go W
   25 : From [  2,  3 ] go W
   26 : From [  1,  3 ] go S
   27 : From [  1,  4 ] go S
Game over: Pacman has eaten all the food
